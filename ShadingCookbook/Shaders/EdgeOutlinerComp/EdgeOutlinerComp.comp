#version 430 core

layout (local_size_x = 25, local_size_y = 25) in;

uniform float EdgeThreshold = 0.1;

float luminance (vec3 color)
{
	return 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;
}

shared float localData[gl_WorkGroupSize.x + 2][gl_WorkGroupSize.y + 2];
layout (binding = 0, rgba8) uniform image2D InputImg;
layout (binding = 1, rgba8) uniform image2D OutputImg;

void applyFilter()
{
	uvec2 p = gl_LocalInvocationID.xy + uvec2(1, 1);
	float sx = localData[p.x-1][p.y-1] + 2 * localData[p.x-1][p.y] + localData[p.x-1][p.y+1]
          - (localData[p.x+1][p.y-1] + 2 * localData[p.x+1][p.y] + localData[p.x+1][p.y+1]);
  	float sy = localData[p.x-1][p.y+1] + 2 * localData[p.x  ][p.y+1] + localData[p.x+1][p.y+1]  - 
            (localData[p.x-1][p.y-1] + 2 * localData[p.x  ][p.y-1] + localData[p.x+1][p.y-1]);
    float dist = sx * sx + sy * sy;
    if (dist > EdgeThreshold)
   		imageStore(OutputImg, ivec2(gl_LocalInvocationID.xy), vec4(1.0));
	else
		imageStore(OutputImg, ivec2(gl_LocalInvocationID.xy), vec4(0, 0, 0, 1));

}

void main()
{
}